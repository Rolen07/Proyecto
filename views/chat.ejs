<!DOCTYPE html>
<html>
<head>
  <title>Chat</title>
<style>
  body {
    background-attachment: fixed;
    background-image: url("/img/FondoWiiThingyEnfocado.png");
    background-repeat: no-repeat;
    background-size: cover;
    font-family: 'Arial', sans-serif;
  }
  #cuadrosticky {
    position: sticky;
    top: 2%;
  }
  #logo {
    position: absolute;
    left: 0.1%;
    top: 1%;
    border-style: none;
    background-color: rgba(255, 255, 255, 0);
  }
  #chat-container {
    position: relative;
    left: 9%;
    font-size: 25px;
    width: 1200px;
  }
  #inputmensajes {
    position: sticky;
    width: 1000px;
  }

  #inputmensajes > #boton {
    position: relative;
    width: 120%;
    padding: 7px;
    height: 10%;
    margin-top: 10px;
    margin-bottom: 10px;
  }

  #inputmensajes input[type="text"] {
      width: 117.7%;
      height: 20%;
      padding: 10px;
      font-size: 19px;
      font-family: 'Arial';
      line-height: 28px;
    }

  /* Estilos para mensajes */
  .message {
    margin-bottom: 10px;
    padding: 10px;
    border-radius: 5px;
  }
  .message.sender {
    background-color: rgba(34, 156, 178, 0.425);
    text-align: right;
  }
  .message.receiver {
    background-color: rgba(255, 166, 0, 0.425);
    text-align: left;
  }
</style>
</head>
<body>
  <div id="cuadrosticky">
    <button align="left" id="logo"><a href="/principal"><img src="/img/LogoAffinitySolSQRvar.png" width="100px"></a></button>
  </div>
  <div id="chat-container">
    <form id="chat-form">
      <input type="hidden" id="ID_conversacion">
      <div id="inputmensajes">
      <input type="text" id="mensaje" placeholder="Escribe tu mensaje...">
      <button type="submit" id="boton" onclick="enviarMensaje(event)">Enviar</button>
      </div>
    </form>
    <div id="messages"></div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const userID = sessionStorage.getItem('userID');
      const chatForm = document.getElementById('chat-form');
      const messagesContainer = document.getElementById('messages');
      const ID_conversacion = document.getElementById('ID_conversacion');

      fetch('/chat/conversacion', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ ID_conversacion: ID_conversacion})
      })
      .then(response => response.json())
      .then(data => {
        ID_conversacion.value = data.ID_conversacion;
        loadMessages(data.ID_conversacion);
      });

      chatForm.addEventListener('submit', function (event) {
        event.preventDefault();
        const mensaje = document.getElementById('mensaje').value;
        if (mensaje.trim() === '') {
          alert('El mensaje no puede estar vacÃ­o');
          return;
        }
        enviarMensaje(event);
      });

      function enviarMensaje(event) {
        const mensaje = document.getElementById('mensaje').value;

        fetch('/chat/mensaje', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ ID_conversacion: ID_conversacion.value, Emisor: userID, Texto: mensaje })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            loadMessages(ID_conversacion.value);
            document.getElementById('mensaje').value = '';
          }
        });
      }

      function loadMessages(ID_conversacion) {
        fetch(`/chat/mensaje/${ID_conversacion}`)
          .then(response => response.json())
          .then(messages => {
            messagesContainer.innerHTML = '';
            messages.forEach(message => {
              const messageElement = document.createElement('div');
              messageElement.textContent = `${message.EmisorNombre}: ${message.Texto}`;
              messageElement.classList.add('message');
              if (message.Emisor === parseInt(userID)) {
                messageElement.classList.add('sender');
              } else {
                messageElement.classList.add('receiver');
              }
              messagesContainer.appendChild(messageElement);
            });
          });
      }
    });
  </script>
</body>
</html>